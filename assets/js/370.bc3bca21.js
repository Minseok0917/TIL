(window.webpackJsonp=window.webpackJsonp||[]).push([[370],{607:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"엘소드"}},[t._v("엘소드")]),t._v(" "),s("p",[t._v("평일에는 게임할 시간이 없으니"),s("br"),t._v("\n캐릭터를 육성했다.")]),t._v(" "),s("p",[t._v("그렇다고 또 오래하지는 않았다.")]),t._v(" "),s("h2",{attrs:{id:"react-todo"}},[t._v("React Todo")]),t._v(" "),s("p",[t._v("리액트로 투두리스트를 만들려고 프로젝트를 구성했다."),s("br"),t._v("\n하지만 나는 리액트에 대해 많이 알고 있다고 생각하지는 않는다.")]),t._v(" "),s("p",[t._v("구현할 기능들과 컴포넌트를 어떻게 작성할 지 생각하다가"),s("br"),t._v("\n컴포넌트 분리를 할려면 HTML 구조를 잡아야하는데")]),t._v(" "),s("p",[t._v("HTML 구조는 결국 CSS 나 JS 구조를 참고하여 작성하는데"),s("br"),t._v("\n그러면 CSS 를 규칙성있게 작성하면 컴포넌트 분리도 쉽지 않을까 싶었다.")]),t._v(" "),s("h2",{attrs:{id:"css-bem"}},[t._v("CSS BEM")]),t._v(" "),s("p",[t._v("CSS 를 작성하는 방법론은 BEM 뿐만이 아니지만"),s("br"),t._v("\n가장 먼저 기억에 남는게 BEM 이라서 해당 방법론을 찾아봤다.")]),t._v(" "),s("p",[t._v("BEM 에서도 규칙은 비슷하나 작성 방법이 약간씩 다른 경우가 있었다.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("block-name__elem-name--mod-name--mod-val")])]),t._v(" "),s("li",[s("code",[t._v("blockName-elemName_modName_modVal")])]),t._v(" "),s("li",[s("code",[t._v("BlockName-ElemName_modName_modVal")])])]),t._v(" "),s("p",[t._v("위에 사항과 별개로 더 작성 방안이 많다."),s("br"),t._v("\n그래도 대략 예시를 들여 정리를 하자면 아래와 같다.")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- block-name_modify-key_modify-value --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button button_size_m button_disabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("버튼"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("BEM 의 단점은 고려사항에 따라 점점 클래스가 길어지고,"),s("br"),t._v("\n아래로 중첩되는 구조가 됬을 때 네이밍을 어떻게 해야될 지 고민하게 된다.")]),t._v(" "),s("p",[t._v("해당 부분은 SCSS 에서 작성할 경우에는 간단하게 작성할 수 있다."),s("br"),t._v("\nSCSS 같은 경우에는 "),s("strong",[t._v("&")]),t._v(" 를 사용해서 앞에 텍스트를 대처할 수 있는 기능이있다.")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".button ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[s("span",{pre:!0,attrs:{class:"token parent important"}},[t._v("&")]),t._v(".size_m ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 14px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[s("span",{pre:!0,attrs:{class:"token parent important"}},[t._v("&")]),t._v(".disabled ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #999"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("pointer-events")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("하지만 아직 BEM 에 단점을 대처할 수 있는 대안이라던가"),s("br"),t._v("\n다른 CSS 방법론을 찾아보지 않아 잘 이해가 되지 않는 부분도 많다.")]),t._v(" "),s("p",[t._v("그래도 리액트도 따지면 "),s("code",[t._v("modify-key")]),t._v(", "),s("code",[t._v("modify-value")]),t._v(" 는 props 값이 되지 않을까 싶다."),s("br"),t._v("\n그리고 "),s("code",[t._v("styled-components")]),t._v(" 를 사용하면 BEM 구조로 객체를 구성할 수 있지만,"),s("br"),t._v("\n단일 클래스인 버튼, 인풋이 아니라 전체적인 레이아웃일 경우에는 또 어떻게 작성해야 될 지 난감하다.")]),t._v(" "),s("h2",{attrs:{id:"우선순위"}},[t._v("우선순위")]),t._v(" "),s("p",[t._v("공부를 하다가 나름 생각해봤는데 차주는 회사에서 그렇게 바쁠거라는 생각은 안하고 있고,"),s("br"),t._v("\n회사에서 남는 시간에 SCSS, React Todo 를 만들어보는건 문제가 되지 않을거다.")]),t._v(" "),s("p",[t._v("그렇다면 환경에 맞는 우선순위를 결정해야 되는 것이다."),s("br"),t._v("\n회사에서 시간이 남는다면 공부는 회사에서 해도 가능하다.")]),t._v(" "),s("ol",[s("li",[t._v("현재 상황에서만 할 수 있는가?")]),t._v(" "),s("li",[t._v("중요한 일이지만 기간이 얼마 남지 않았는가?")]),t._v(" "),s("li",[t._v("미룰수 있지만 나중에는 꼭 해야하는가?")]),t._v(" "),s("li",[t._v("시간은 얼마나 소요가 되는가?")]),t._v(" "),s("li",[t._v("나에게 도움이되는 일인가?")])]),t._v(" "),s("p",[t._v("잠시 생각한 우선순위를 정하는 순서도같은건 위에 작성한거지만"),s("br"),t._v("\n본인만의 우선순위 규칙같은걸 정해야겠다.")]),t._v(" "),s("p",[t._v("이후 샤워하고 일지쓰고 잤다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);