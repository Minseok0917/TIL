(window.webpackJsonp=window.webpackJsonp||[]).push([[862],{1097:function(v,_,e){"use strict";e.r(_);var n=e(14),t=Object(n.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"회사"}},[v._v("회사")]),v._v(" "),_("p",[v._v("오늘은 회사에서 PDF.JS 관련 최적화 작업을 진행했는데 메인 작업은 캐싱이였다."),_("br"),v._v("\n최적화할 항목들은 지연 로딩과 캐싱도 추릴수 있었는데 Vue의 녹여내는 과정이 어렵다. (오늘은 캐싱을 했다)")]),v._v(" "),_("p",[v._v("Vue에서는 클래스를 반응형 객체에 넣으면 오류가 발생하거나, 제대로 작동하지 않는 경우가 있다."),_("br"),v._v("\n나름의 코드를 분석해서 생각해보면 클래스 내부에 비공개 변수들을 접근하려고 해서 생긴 문제가 아닌가 싶다."),_("br"),v._v("\n쨋든 반응성 변수에 PDF.JS에 소속된 클래스를 넣을 경우에는 에러가 발생하면서 펑펑 터지는 구조가 된다.")]),v._v(" "),_("p",[v._v("그래서 나름 고안해낸 아이디어가 정적 스토리지를 직접 만드는거였다. 캐싱할 내용도 많아서 구조 잡는것도 번거로웠다."),_("br"),v._v("\n캐싱 항목들은 "),_("code",[v._v("PDFDocumentProxy")]),v._v(", "),_("code",[v._v("PDFPageProxy")]),v._v(", "),_("code",[v._v("CanvasBase64")]),v._v(", "),_("code",[v._v("textContent")]),v._v(" 정도였다.")]),v._v(" "),_("p",[v._v("처음에는 캔버스자체를 직접 만들어서 매번 동적으로 추가해주는 방법도 했었는데 PDF를 전환하니 작동하지 않았다."),_("br"),v._v("\n캐싱이 되는 순서 자체는 아래와 같다.")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("PDFDocumentProxy")]),v._v(" : URL로 PDF파일을 읽었을 때 PDF정보를 포함하는 데이터를 가지고 있고, 총 페이지수, 페이지 로드등 할 수 있음.")]),v._v(" "),_("li",[_("code",[v._v("PDFPageProxy")]),v._v(" : "),_("code",[v._v("PDFDocumentProxy")]),v._v("에서 페이지 번호를 입력하면 페이지 정도를 비동기로 가져오는 갯수만큼 가져온다.")]),v._v(" "),_("li",[_("code",[v._v("CanvasBase64")]),v._v(" : PDF를 렌더링할 때 오래걸리는 부분이 캔버스에 PDF 내용을 그리는 과정인데 다 그린 데이터를 Base64로 변경하여 따로 저장해둔다.")]),v._v(" "),_("li",[_("code",[v._v("textContent")]),v._v(" : 캔버스로 로드된 PDF 텍스트에는 드래그를 할 수가 없기에 Text를 뒷 배경으로 깔아서 드래그 및 복붙이 가능하게끔하는 텍스트 데이터")])]),v._v(" "),_("p",[v._v("3, 4번에 대한 시간이 꽤 오래걸리고 1, 2번은 그렇게 오래걸리진 캐싱을 하지 않으면 버벅거림이 생길정도는 있어서 전부 캐싱을 하게 됐다."),_("br"),v._v("\n정적 스토리지를 Vue 반응형 시스템에 넣지 않으면 사실상 특정 부분이 수정됐을때 렌더링이 작동하지 않을수도 있어서 개념을 잘 알아야한다. (클래스 때문에 안됌)"),_("br"),v._v("\n그리고 PDF.JS가 직접 Element를 가져와서 함수를 실행시켜서 동작 시키는 부분도 있었기에 별도로 DOM에 접근해서 초기화해주는 코드도 작성해야한다.")]),v._v(" "),_("p",[v._v("라이브러리를 사용해본다는 선택지도 있었는데 기능 구현되어있고 좋은데 문제점은 다중 PDF를 지원하지 않고 단순 PDF Viewer로써만 기능을 작동하기 때문이다."),_("br"),v._v("\nPDF 파일을 셀렉트 박스에서 선택해서 변경하면서 볼 수 있어야하는데 지원을 하지 않고 라이브러리가 다중 PDF를 고려하고 만든게 아니라 전환할 때마다 새로 로드한다."),_("br"),v._v("\n그래서 일일이 만드는 선택지를 했는데 어휴... 자료도 많이 없고 혼자서 계속 여러 시도를 하면서 문제를 푸는게 참 고단하다.")]),v._v(" "),_("p",[v._v("슬슬 프로젝트 마감기간이라 압박이 들어오는데 AI 관련 라이브러리의 진행도는 그렇게 많지는 않고... 이번주는 진짜 빡세게 개발해야될 듯싶다.")]),v._v(" "),_("h2",{attrs:{id:"학교"}},[v._v("학교")]),v._v(" "),_("p",[v._v("학교에서는 인상깊었던게 예전엔 단순하게 기능반에 컵라면을 구비해뒀는데 이제는 봉지라면을 넣어놨다."),_("br"),v._v("\n그리고 한강라면 끓이는거에 계란도 있어서 컵라면이 아닌 봉지라면을 먹을 수 있게 변했다. ㅋㅋㅋㅋ"),_("br"),v._v("\n기능경기대회 문제 출제하는거 검토하면서 문제 퀼리티좀 높이고 그랬다. 문제가 완성도가 높아서 뽑혔으면 좋겠다")]),v._v(" "),_("h2",{attrs:{id:"집"}},[v._v("집")]),v._v(" "),_("p",[v._v("집에서는 PDF.JS 관련해서 확대, 축소 기능을 구현했는데 중간 중간 회사에서 진행하면서 부족했던 버그들도 찾아서 고치고 그랬다."),_("br"),v._v("\n확대, 축소 자체는 거의 깔끔하게 됐고 이전에 로드한 PDF 페이지는 다시 렌더링할땐 캐싱된 데이터를 가져와서 빠르게 그리곤한다."),_("br"),v._v("\n남은 기능들이 "),_("code",[v._v("LazyLoading")]),v._v("이랑 입력으로 페이지 이동, 페이지 미리보기등이 있는데 "),_("code",[v._v("LazyLoading")]),v._v("부분만 클리어하면 나머지는 빠르게 끝나지 않을까 싶다.")])])}),[],!1,null,null,null);_.default=t.exports}}]);